#####################################################################################################################
#                                                                                                                   #
#                                                     EVENTS                                                        #
#                                                                                                                   #
#   message: The message to be displayed. Variables are inserted in the format <var:name>, such as <var:ipaddress>. #
#   regex: A regular expression paired with a replacement string to find and replace parts of a message.            #
#                                                                                                                   #
#####################################################################################################################

# Executed after variables have been inserted but before the message specific regex replacement and before player names have been added on all messages.
global_regex: [

  # Fix formatting issues
    "::ffff:":"",
    " \\(\\)":"",
    "''":"",

  # Classes and Teams
    "SCP_":"SCP-",
    "SCP-049_2":"SCP-049-2",
    "SCP-939_":"SCP-939-",
    "SCP-939-89":"SCP-939-109",
    "CLASSD":"D-Class",
    "D_CLASS":"D-Class",
    "SPECTATOR":"Spectator",
    "SCIENTIST":"Scientist",
    "FACILITY_GUARD":"Facility Guard",
    "ZOMBIE":"Zombie",
    "TUTORIAL":"Tutorial",
    "MTF_SERGEANT":"MTF Sergeant",
    "MTF_CAPTAIN":"MTF Captain",
    "MTF_PRIVATE":"MTF Private",
    "MTF_SPECIALIST":"MTF Specialist",
    "CHAOS_CONSCRIPT":"CI Conscript",
    "CHAOS_RIFLEMAN":"CI Rifleman",
    "CHAOS_REPRESSOR":"CI Repressor",
    "CHAOS_MARAUDER":"CI Marauder",
    "CHAOS_INSURGENCY":"Chaos Insurgency",

  # Elevators
    "GATE_A":"Gate A",
    "GATE_B":"Gate B",
    "LIFT_A":"Lift A",
    "LIFT_B":"Lift B",
    "SCP-049_CHAMBER":"SCP-049 Containment Chamber",
    "WARHEAD_ROOM":"the warhead room",

  # Non-weapon damage types
    "WARHEAD":"the alpha warhead",
    "FALLING":"fall damage",
    "RECONTAINED":"re-containment",
    "DECONTAMINATION":"LCZ decontamination",
    "FEMUR_BREAKER":"the femur breaker",
    "POCKET_DECAY":"the pocket dimension",
    "TESLA":"tesla energy",
    "CRUSHED":"getting crushed",
    "FRIENDLY_FIRE_PUNISHMENT":"friendly fire punishment",
    "BLEEDING":"bleeding",
    "POISON":"poison",
    "ASPHYXIATED":"asphyxiation",
    "EXPLOSION":"an explosion",
    "SEVERED_HANDS":"bleeding from where their hands used to be",
    "UNKNOWN_FIREARM":"getting shot",
    "HYPOTHERMIA":"hypothermia",

  # Items
    "KEYCARD_JANITOR":"Janitor keycard",
    "KEYCARD_SCIENTIST":"Scientist keycard",
    "KEYCARD_RESEARCH_COORDINATOR":"Research Coordinator keycard",
    "KEYCARD_ZONE_MANAGER":"Zone Manager keycard",
    "KEYCARD_GUARD":"Guard keycard",
    "KEYCARD_NTF_OFFICER":"MTF Officer keycard",
    "KEYCARD_CONTAINMENT_ENGINEER":"Containment Engineer keycard",
    "KEYCARD_NTF_LIEUTENANT":"MTF Lieutenant keycard",
    "KEYCARD_NTF_COMMANDER":"MTF Commander keycard",
    "KEYCARD_FACILITY_MANAGER":"Facility Manager keycard",
    "KEYCARD_CHAOS_INSURGENCY":"Chaos Insurgency device",
    "KEYCARD_O5":"O5 keycard",

    "RADIO":"radio",
    "GUN_COM15":"COM-15",
    "COM15":"COM-15",
    "MEDKIT":"medkit",
    "FLASHLIGHT":"flashlight",
    "MICRO_HID":"Micro-HID",
    "SCP500":"SCP-500",
    "SCP207":"SCP-207",
    "AMMO_12_GAUGE":"12 Gauge ammo",
    "GUN_E11_SR":"Epsilon-11 SR",
    "E11_SR":"Epsilon-11 SR",
    "GUN_CROSSVEC":"Crossvec",
    "CROSSVEC":"Crossvec",
    "AMMO_556_X45":"5.56mm ammo",
    "GUN_FSP9":"FSP9",
    "GUN_LOGICER":"Logicer",
    "LOGICER":"Logicer",
    "GRENADE_HE":"grenade",
    "GRENADE_FLASH":"flashbang",
    "AMMO_44_CAL":".44 ammo",
    "AMMO_762_X39":"7.62mm ammo",
    "AMMO_9_X19":"9mm ammo",
    "GUN_COM18":"COM-18",
    "COM18":"COM-18",

    "SCP018":"SCP-018",
    "SCP268":"SCP-268",
    "ADRENALINE":"adrenaline",
    "PAINKILLERS":"painkillers",
    "COIN":"coin",

    "ARMOR_LIGHT":"light armour",
    "ARMOR_COMBAT":"combat armour",
    "ARMOR_HEAVY":"heavy armour",
    "GUN_REVOLVER":"revolver",
    "REVOLVER":"revolver",
    "GUN_AK":"AK",
    "GUN_SHOTGUN":"shotgun",
    "SHOTGUN":"shotgun",
    "SCP330":"SCP-330",
    "SCP2176":"SCP-2176",

  # 914 settings
    "ROUGH":"rough",
    "COARSE":"coarse",
    "ONE_TO_ONE":"1:1",
    "VERY_FINE":"very fine",
    "FINE":"fine",

  # Room names
    "UNNAMED":"an unnamed room",
    "LCZ_012":"SCP-012 containment",
    "LCZ173":"SCP-173 containment", # Remove when fixed
    "LCZ_173":"SCP-173 containment",
    "LCZ_GLASS_ROOM":"SCP-372 containment",
    "LCZ_914":"SCP-914 containment",
    "LCZ_GREENHOUSE":"the LCZ greenhouse",
    "LCZ_AIRLOCK":"an airlock",
    "LCZ_ARMORY":"the LCZ armory",
    "LCZ_COMPUTER_ROOM":"the LCZ computer room",
    "LCZ_CHECKPOINT_A":"LCZ checkpoint A",
    "LCZ_CHECKPOINT_B":"LCZ checkpoint B",
    "LCZ_CLASS_D_SPAWN":"D-class cells",
    "LCZ_TOILETS":"LCZ toilets",

    "HCZ_049":"SCP-049 containment",
    "HCZ_079":"SCP-079 containment",
    "HCZ_106":"SCP-106 containment",
    "HCZ_096":"SCP-096 containment",
    "HCZ_939":"SCP-939 containment",
    "HCZ_CHECKPOINT_A":"HCZ checkpoint A",
    "HCZ_CHECKPOINT_B":"HCZ checkpoint B",
    "HCZ_CHECKPOINT_TO_ENTRANCE_ZONE":"entrance zone checkpoint",
    "HCZ_MICRO_HID":"the Micro-HID armory",
    "HCZ_WARHEAD":"the warhead silo",
    "HCZ_SERVERS":"the server room",
    "HCZ_ARMORY":"the HCZ armory",
    "HCZ_TESLA":"a tesla gate corridor",

    "EZ_GATE_A":"gate B",
    "EZ_GATE_B":"gate B",
    "EZ_COLLAPSED_TUNNEL":"a collapsed tunnel",
    "EZ_RED_ROOM":"a locked gate room",
    "EZ_INTERCOM":"the intercom room",
    "EZ_OFFICE_STORIED":"an office",
    "EZ_OFFICE_LARGE":"an office",
    "EZ_OFFICE_SMALL":"an office",
    "EZ_EVAC_SHELTER":"the evac shelter",
    "OUTSIDE":"the outside area",
    "POCKET":"the pocket dimension"
]

# Executes on the final version of the message, this is the only regex that affects player names
final_regex: ["discord\\.gg":"","http":"","www\\.":"", "<@":"<", "<@!":"<!"]

messages:
    onroundstart:
        message: "**Round started.**"
        regex: []
    onconnect:
        # ipaddress - string
        # steamid - string
        # jointype - CentralAuthPreauthFlags
        # region - string
        message: "Player (<var:steamid>) attempting connection..."
        regex: []
    onplayerleave:
        # ipaddress - string
        # playerid - int
        # steamid - string
        # name - string
        message: "**<var:name> (<var:steamid>) left the game.**"
        regex: []
    onroundend:
        # duration - int
        # leadingteam -string
        # dclassalive - int
        # dclassdead - int
        # dclassescaped - int
        # dclassstart - int
        # mtfalive - int
        # mtfdead - int
        # mtfstart - int
        # scientistsalive - int
        # scientistsdead - int
        # scientistsescaped - int
        # scientistsstart - int
        # scpalive - int
        # scpdead - int
        # scpkills - int
        # scpstart - int
        # warheaddetonated - bool
        # warheadkills - int
        # zombiesalive - int
        # zombieschanged - int
        message: >+
            **Round ended after <var:duration> minutes.**
            ```
            Escaped D-class:            <var:dclassescaped>/<var:dclassstart>\n
            Rescued Scientists:         <var:scientistsescaped>/<var:scientistsstart>\n
            Contained SCPs:             <var:scpdead>/<var:scpstart>\n
            Killed by SCP:              <var:scpkills>\n
            Warhead switchwas<var:warheaddetonated> detonated.
            ```
        regex: ["switchwasTrue":"was","switchwasFalse":"was not"]
    onwaitingforplayers:
        message: "**Server is ready and waiting for players.**"
        regex: []
    onroundrestart:
        message: "**Round is restarting...**"
        regex: []
    onsetservername:
        # servername - string
        message: "**Server name: <var:servername>.**"
        regex: []

    onscp914activate:
        # knobsetting - KnobSetting
        # ipaddress
        # name
        # playerid
        # steamid
        # class
        # team
        message: " <var:name> (<var:steamid>) activated SCP-914 on the setting <var:knobsetting>."
        regex: []
    onstartcountdown:
        # isAutomatic - bool
        # isresumed - bool
        # timeleft - float
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        noplayer:
            message: "**The on-site nuclear warhead has been remotely activated by order of the O5 Council. All personnel must evacuate immediately.**"
            regex: []
        initiated:
            message: "**The on-site nuclear warhead has been activated by <var:name> (<var:steamid>), <var:timeleft> seconds until detonation. All personnel must evacuate immediately.**"
            regex: []
        resumed:
            message: "**The warhead countdown has been resumed <var:name> (<var:steamid>), <var:timeleft> seconds until detonation.**"
            regex: []
    onstopcountdown:
        # timeleft
        # ipaddress
        # name
        # playerid
        # steamid
        # class
        # team
        default:
            message: "**The on-site nuclear warhead detonation has been canceled by <var:name> (<var:steamid>).**"
            regex: []
        noplayer:
            message: "**The on-site nuclear warhead detonation has been canceled remotely by order of the Ethics Committee**"
            regex: []
    ondetonate:
        message: "**Detonation of the on-site nuclear warhead has been detected. MTF operatives are inbound to clear out any remaining threats.**"
        regex: []
    ondecontaminate:
        message: "**Light Containment Zone de-contamination has been initiated, all biological material will be destroyed.**"
        regex: []
    onsummonvehicle:
        chaos:
            message: "**Warning: Unauthorized vehicle has breached the site perimeter.**"
            regex: []
        mtf:
            message: "**MTF helicopter is in visual range of the site, preparing to land.**"
            regex: []
    ongeneratorfinish:
        # room
        # ipaddress
        # name
        # playerid
        # steamid
        # class
        # team
        message: "Generator in <var:room> has been activated by <var:name> (<var:steamid>)."
        regex: [ ]

    onplayerhurt:
        # damage - float
        # damagetype - DamageType
        # attackeripaddress - string
        # attackername - string
        # attackerplayerid - int
        # attackersteamid - string
        # attackerclass - Role
        # attackerteam - Team
        # playeripaddress - string
        # playername - string
        # playerplayerid - int
        # playersteamid - string
        # playerclass - Role
        # playerteam - Team
        default:
            message: "<var:playername> (<var:playersteamid>) was hurt by <var:attackername> (<var:attackersteamid>) using <var:damagetype> (<var:damage> hp)."
            regex: ["using UNKNOWN":"using unknown means"]
        friendlyfire:
            message: "**<var:playerteam> <var:playername> (<var:playersteamid>) was attacked by teammate <var:attackerteam> <var:attackername> (<var:attackersteamid>) using <var:damagetype> (<var:damage> hp).**"
            regex: ["using UNKNOWN":"using unknown means"]
        noattacker:
            message: "<var:playername> (<var:playersteamid>) took <var:damage> damage by <var:damagetype>."
            regex: ["damage by UNKNOWN":"damage from unknown causes"]
    onplayerdie:
        # damagetype - DamageType
        # attackeripaddress - string
        # attackername - string
        # attackerplayerid - int
        # attackersteamid - string
        # attackerclass - Role
        # attackerteam - Team
        # playeripaddress - string
        # playername - string
        # playerplayerid - int
        # playersteamid - string
        # playerclass - Role
        # playerteam - Team
        default:
            message: "<var:playername> (<var:playersteamid>) was killed by <var:attackername> (<var:attackersteamid>) using <var:damagetype>."
            regex: ["using UNKNOWN":"using unknown means"]
        friendlyfire:
            message: "**<var:playerteam> <var:playername> (<var:playersteamid>) was teamkilled by <var:attackerteam> <var:attackername> (<var:attackersteamid>) using <var:damagetype>.**"
            regex: ["using UNKNOWN":"using unknown means"]
        nokiller:
            message: "<var:playername> (<var:playersteamid>) died by <var:damagetype>."
            regex: ["died by UNKNOWN":"died in an unknown way"]
    onplayerpickupitem:
        # item - Item
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) picked up <var:item>."
        regex: []
    onplayerpickupammo:
        # ammo - Item
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) picked up <var:ammo>."
        regex: []
    onplayerpickuparmor:
        # item - Item
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) picked up <var:armor>."
        regex: []
    onplayerpickupscp330:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) picked up SCP-330."
        regex: []
    onplayerdropitem:
        # item - Item
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) dropped <var:item>."
        regex: []
    onplayerdropammo:
        # ammo - Item
        # amount - int
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) dropped <var:amount> <var:ammo>."
        regex: [ ]
    onplayerjoin:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "**<var:name> (<var:steamid>) joined the game.**"
        regex: []
    onnicknameset:
        # nickname - string
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "Player '<var:name> (<var:steamid>)' set their nickname to <var:nickname>."
        regex: []
    onassignteam:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) has joined the <var:team> team."
        regex: []
    onsetrole:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) has become a <var:class>."
        regex: []
    onspawn:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) spawned as <var:class>."
        regex: []
    ondooraccess:
        # doorname - string
        # permission - string
        # locked - bool
        # lockcooldown - float
        # open - bool
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        allowed:
            message: "<var:name> (<var:steamid>) isopen:<var:open> a door (<var:doorname>) requiring the permission <var:permission>."
            regex: ["isopen:True":"closed", "isopen:False":"opened", " requiring the permission .":""]
        denied:
            message: "<var:name> (<var:steamid>) tried to isopen:<var:open> a locked door (<var:doorname>) requiring the permission <var:permission>."
            regex: ["isopen:True":"close", "isopen:False":"open"," requiring the permission .":"."]
    onpocketdimensionexit:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) escaped the SCP-106 pocket dimension."
        regex: []
    onpocketdimensionenter:
        # attackeripaddress - string
        # attackername - string
        # attackerplayerid - int
        # attackersteamid - string
        # attackerclass - Role
        # attackerteam - Team
        # playeripaddress - string
        # playername - string
        # playerplayerid - int
        # playersteamid - string
        # playerclass - Role
        # playerteam - Team
        message: "<var:playername> (<var:playersteamid>) was taken into the SCP-106 pocket dimension by <var:attackername> (<var:attackersteamid>)."
        regex: []
    onpocketdimensiondie:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) was lost in the SCP-106 pocket dimension."
        regex: []
    onthrowprojectile:
        # type - GrenadeType
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) threw a <var:type>."
        regex: []
    onplayerinfected:
        # damage - int
        # infecttime - int
        # attackeripaddress - string
        # attackername - string
        # attackerplayerid - int
        # attackersteamid - string
        # attackerclass - Role
        # attackerteam - Team
        # playeripaddress - string
        # playername - string
        # playerplayerid - int
        # playersteamid - string
        # playerclass - Role
        # playerteam - Team
        message: "<var:playername> (<var:playersteamid>) was cured by SCP-049."
        regex: []
    onspawnragdoll:
        # damagetype - string
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>)'s <var:class> ragdoll spawned."
        regex: []
    onlure:
        # allowcontain - bool
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) was sacrificed to contain SCP-106."
        regex: []
    oncontain106:
        # activatecontainment - bool
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) has initiated SCP-106 recall protocol."
        regex: []
    onitemuse:
        # item - string
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) used <var:item>."
        regex: []
    onshoot:
        # weapon - DamageType
        # attackeripaddress - string
        # attackername - string
        # attackerplayerid - int
        # attackersteamid - string
        # attackerclass - Role
        # attackerteam - Team
        # playeripaddress - string
        # playername - string
        # playerplayerid - int
        # playersteamid - string
        # playerclass - Role
        # playerteam - Team
        default:
            message: "<var:attackername> (<var:attackersteamid>) shot <var:playername> (<var:playersteamid>) with <var:weapon>."
            regex: []
        notarget:
            message: "<var:attackername> (<var:attackersteamid>) shot at nothing in particular with <var:weapon>."
            regex: []
        friendlyfire:
            message: "**<var:playerteam> <var:playername> (<var:playersteamid>) shot ally <var:attackerteam> <var:attackername> (<var:attackersteamid>) using <var:weapon>.**"
            regex: []
    on106createportal:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) has opened a dimensional portal."
        regex: []
    on106teleport:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) travelled through their pocket dimension."
        regex: []
    onelevatoruse:
        # elevatorname - ElevatorType
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) called the <var:elevatorname> elevator."
        regex: []
    onhandcuff:
        # targetipaddress - string
        # targetname - string
        # targetplayerid - int
        # targetsteamid - string
        # targetclass - Role
        # targetteam - Team
        # playeripaddress - string
        # playername - string
        # playerplayerid - int
        # playersteamid - string
        # playerclass - Role
        # playerteam - Team
        default:
            message: "<var:targetclass> <var:targetname> (<var:targetsteamid>) was handcuffed by <var:playerclass> <var:playername> (<var:playersteamid>)."
            regex: []
        nootherplayer:
            message: "<var:targetclass> <var:targetname> (<var:targetsteamid>) was handcuffed."
            regex: []
    onhandcuffremoved:
        # targetipaddress - string
        # targetname - string
        # targetplayerid - int
        # targetsteamid - string
        # targetclass - Role
        # targetteam - Team
        # playeripaddress - string
        # playername - string
        # playerplayerid - int
        # playersteamid - string
        # playerclass - Role
        # playerteam - Team
        default:
            message: "<var:targetclass> <var:targetname> (<var:targetsteamid>) was released by <var:playerclass> <var:playername> (<var:playersteamid>)."
            regex: []
        nootherplayer:
            message: "<var:targetclass> <var:targetname> (<var:targetsteamid>) was released."
            regex: []
    onplayertriggertesla:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        default:
            message: "<var:team> <var:name> (<var:steamid>) activated a tesla gate."
            regex: []
        ignored:
            message: "<var:team> <var:name> (<var:steamid>) went through a tesla gate without activating it."
            regex: []
    onscp914changeknob:
        # setting - KnobSetting
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) set the SCP-914 knob to \"<var:setting>\"."
        regex: []
    onplayerradioswitch:
        # setting - RadioStatus
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) switched their radio to the <var:setting> status."
        regex: []
    onrecallzombie:
        # allowrecall - bool
        # targetipaddress - string
        # targetname - string
        # targetplayerid - int
        # targetsteamid - string
        # targetclass - Role
        # targetteam - Team
        # playeripaddress - string
        # playername - string
        # playerplayerid - int
        # playersteamid - string
        # playerclass - Role
        # playerteam - Team
        message: "<var:targetname> (<var:targetsteamid>) was revived as an SCP-049-2 instance by <var:playername> (<var:playersteamid>)"
        regex: []
    oncallcommand:
        remoteadmin:
            player:
                # command
                # ipaddress
                # name
                # playerid
                # steamid
                # class
                # team
                message: "<var:name> (<var:steamid>) used the command '<var:command>'."
                regex: [ ]
            server:
                # command
                message: "Server used the command '<var:command>'."
                regex: [ ]
        game:
            player:
                # command
                # ipaddress
                # name
                # playerid
                # steamid
                # class
                # team
                message: "<var:name> (<var:steamid>) used the command '<var:command>'."
                regex: [ ]
            server:
                # command
                message: "Server used the command '<var:command>'."
                regex: [ ]
        console:
            player:
                # command
                # ipaddress
                # name
                # playerid
                # steamid
                # class
                # team
                message: "<var:name> (<var:steamid>) used the command '<var:command>'."
                regex: [ ]
            server:
                # command
                message: "Server used the command '<var:command>'."
                regex: [ ]
    onexecutedcommand:
        remoteadmin:
            player:
                # command
                # result
                # returnmessage
                # ipaddress
                # name
                # playerid
                # steamid
                # class
                # team
                message: "<var:name> (<var:steamid>) used the command '<var:command>'. Result: '<var:returnmessage>'"
                regex: [ ]
            server:
                # command
                # result
                # returnmessage
                message: "Server used the command '<var:command>'. Result: '<var:returnmessage>'"
                regex: [ ]
        game:
            player:
                # command
                # result
                # returnmessage
                # ipaddress
                # name
                # playerid
                # steamid
                # class
                # team
                message: "<var:name> (<var:steamid>) used the command '<var:command>'. Result: '<var:returnmessage>'"
                regex: [ ]
            server:
                # command
                # result
                # returnmessage
                message: "Server used the command '<var:command>'. Result: '<var:returnmessage>'"
                regex: [ ]
        console:
            player:
                # command
                # result
                # returnmessage
                # ipaddress
                # name
                # playerid
                # steamid
                # class
                # team
                message: "<var:name> (<var:steamid>) used the command '<var:command>'. Result: '<var:returnmessage>'"
                regex: [ ]
            server:
                # command
                # result
                # returnmessage
                message: "Server used the command '<var:command>'. Result: '<var:returnmessage>'"
                regex: [ ]
    onreload:
        # weapon
        # maxclipsize
        # ipaddress
        # name
        # playerid
        # steamid
        # class
        # team
        message: "<var:name> (<var:steamid>) reloaded their <var:weapon>."
        regex: []
    ongrenadeexplosion:
        # ipaddress
        # name
        # playerid
        # steamid
        # class
        # team
        message: "<var:name> (<var:steamid>)'s grenade exploded."
        regex: []
    ongrenadehitplayer:
        # targetipaddress - string
        # targetname - string
        # targetplayerid - int
        # targetsteamid - string
        # targetclass - Role
        # targetteam - Team
        # playeripaddress - string
        # playername - string
        # playerplayerid - int
        # playersteamid - string
        # playerclass - Role
        # playerteam - Team
        message: "<var:playername> (<var:playersteamid>)'s grenade hit <var:targetname> (<var:targetsteamid>)"
        regex: []
    ongeneratorunlock:
        # engaged - bool
        # activating - bool
        # locked - bool
        # open - bool
        # room - RoomType
        # starttime - float
        # timeleft - float
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) unlocked a generator in <var:room>."
        regex: [
            "Micro-HID":"the Micro-HID room",
            "nuke":"the nuke silo" ]
    ongeneratorclose:
        # engaged - bool
        # activating - bool
        # locked - bool
        # open - bool
        # room - RoomType
        # starttime - float
        # timeleft - float
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) closed a generator in <var:room>."
        regex: [
            "Micro-HID":"the Micro-HID room",
            "nuke":"the nuke silo" ]
    ongeneratoropen:
        # engaged - bool
        # activating - bool
        # locked - bool
        # open - bool
        # room - RoomType
        # starttime - float
        # timeleft - float
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) opened a generator in <var:room>."
        regex: [
            "Micro-HID":"the Micro-HID room",
            "nuke":"the nuke silo" ]
    ongeneratoractivated:
        # engaged - bool
        # activating - bool
        # locked - bool
        # open - bool
        # room - RoomType
        # starttime - float
        # timeleft - float
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) activated the generator in <var:room>."
        regex: [
            "Micro-HID":"the Micro-HID room",
            "nuke":"the nuke silo" ]
    ongeneratordeactivated:
        # engaged - bool
        # activating - bool
        # locked - bool
        # open - bool
        # room - RoomType
        # starttime - float
        # timeleft - float
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) deactivated the generator in <var:room>."
        regex: [
            "Micro-HID":"the Micro-HID room",
            "nuke":"the nuke silo" ]
    on079door:
        # open - bool
        # door - string
        # apdrain - float
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        closed:
            message: "<var:name> (<var:steamid>) closed a door as SCP-079."
            regex: []
        opened:
            message: "<var:name> (<var:steamid>) opened a door as SCP-079."
            regex: []
    on079lockdoor:
        # open - bool
        # door - string
        # apdrain - float
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) locked a door as SCP-079."
        regex: []
    on079elevator:
        # elevator - ElevatorType
        # status - ElevatorStatus
        # apdrain - float
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        up:
            message: "<var:name> (<var:steamid>) sent the <var:elevator> elevator up."
            regex: []
        down:
            message: "<var:name> (<var:steamid>) sent the <var:elevator> elevator down."
            regex: []
    on079teslagate:
        # apdrain - float
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) activated a tesla gate."
        regex: []
    on079addexp:
        # xptype - ExperienceType
        # amount - float
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) got <var:amount> xp."
        regex: []
    on079levelup:
        # level - int
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) leveled up as SCP-079."
        regex: []
    on079unlockdoor:
        # doorname - string
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) locked a <var:doorname> door."
        regex: []
    on079lockdown:
        # room - RoomType
        # apdrain - float
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) has locked down <var:room>."
        regex: [
            "Micro-HID":"the Micro-HID room",
            "nuke":"the nuke silo" ]
    on079cancellockdown:
        # room - RoomType
        # apdrain - float
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) has cancelled lockdown in <var:room>."
        regex: [
            "Micro-HID":"the Micro-HID room",
            "nuke":"the nuke silo" ]
    on079elevatorteleport:
        # elevator - ElevatorType
        # status - ElevatorStatus
        # apdrain - float
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) switched floor as SCP-079."
        regex: []

    onban:
        player:
            # duration - int
            # reason - string
            # playeripaddress - string
            # playername - string
            # playerplayerid - int
            # playersteamid - string
            # playerclass - Role
            # playerteam - Team
            # issueripaddress - string
            # issuername - string
            # issuerplayerid - int
            # issuersteamid - string
            # issuerclass - Role
            # issuerteam - Team
            message: "Player <var:playername> (<var:playersteamid>) was banned by <var:issuername> (<var:issuersteamid>) for `<var:duration>`. Reason: <var:reason>"
            regex: [ ]
        server:
            # duration - int
            # reason - string
            # playeripaddress - string
            # playername - string
            # playerplayerid - int
            # playersteamid - string
            # playerclass - Role
            # playerteam - Team
            message: "Player <var:playername> (<var:playersteamid>) was banned by the server for `<var:duration>`. Reason: <var:reason>"
            regex: []

    onkick:
        player:
            # reason - string
            # playeripaddress - string
            # playername - string
            # playerplayerid - int
            # playersteamid - string
            # playerclass - Role
            # playerteam - Team
            # issueripaddress - string
            # issuername - string
            # issuerplayerid - int
            # issuersteamid - string
            # issuerclass - Role
            # issuerteam - Team
            message: "Player <var:playername> (<var:playersteamid>) was kicked by <var:issuername> (<var:issuersteamid>). Reason: <var:reason>"
            regex: [ ]
        server:
            # reason - string
            # playeripaddress - string
            # playername - string
            # playerplayerid - int
            # playersteamid - string
            # playerclass - Role
            # playerteam - Team
            message: "Player <var:playername> (<var:playersteamid>) was kicked by the server. Reason: <var:reason>"
            regex: []

    onteamrespawn:
        # players - List<Player>
        # spawnchaos - bool
        mtf:
            message: "**Mobile Task Force Epsilon-11 designated Nine-Tailed Fox has entered the facility.**"
            regex: []
        ci:
            message: "**Facility incursion detected, intruders identified as members of hostile GOI \"Chaos Insurgency\".**"
            regex: []
    onsetntfunitname:
        # name - string
        message: "**MTF unit designated <var:name> has entered the facility.**"
        regex: []

#####################################################################################################################
#                                                                                                                   #
#                                                   DISCORD BOT                                                     #
#                                                                                                                   #
#   message: The message to be displayed. Variables are inserted in the format <var:name>, such as <var:ipaddress>. #
#   regex: A regular expression paired with a replacement string to find and replace parts of a message.            #
#                                                                                                                   #
#####################################################################################################################

    connectedtobot:
        message: "**SCP:SL server connected.**"
        regex: []
    missingarguments:
        # command - string
        message: "Missing arguments."
        regex: []
    invalidsteamid:
        # steamid - string
        message: "Invalid SteamID '<var:steamid>'."
        regex: []
    invalidsteamidorip:
        # steamidorip - string
        message: "Invalid SteamID or IP '<var:steamidorip>'."
        regex: []
    invalidduration:
        # duration - string
        message: "Invalid duration '<var:duration>'."
        regex: []
    playernotfound:
        # steamid - string
        message: "Player with SteamID '<var:steamid>' not found."
        regex: []
    playerkicked:
        # name - string
        # steamid - string
        # admintag - string
        message: "'<var:name>' (<var:steamid>) was kicked from the server by <var:admintag>."
        regex: []
    playerbanned:
        # name - string
        # steamid - string
        # reason - string
        # duration - string
        # admintag - string
        message: "'<var:name>' (<var:steamid>) was banned from the server by <var:admintag> for the reason '<var:reason>' (<var:duration>)."
        regex: []
    playerunbanned:
        # steamidorip - string
        message: "All entries with SteamID/IP '<var:steamidorip>' have been cleared from the ban lists."
        regex: []
    kickall:
        # reason - string
        # admintag - string
        message: "All players have been kicked from the server by <var:admintag> with the reason '<var:reason>'."
        regex: []
    # The feedback from a console command, except the custom ones above. (Is not affected by global regex other than final_regex)
    consolecommandfeedback:
        # feedback - string
        message: "<var:feedback>"
        regex: []
    botstatus:
        # players - int
        # maxplayers - int
        message: "<var:players> / <var:maxplayers>"
        regex: []